// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 4b106605c55c3c39 "Housemood (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Small desktop' | 'Tablet' | 'Phone' // Variant
 * image?: {src: string, srcSet?: string, alt?: string} // Image
}} Props

 */
import { routes } from "./chunks/chunk-6GHPDBWQ.js";

// virtual:moment-regular
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/789SvfOUVBxE34GfS70G/kvky7i5EP7vRRVOC22DC/QNfG3nOFA.js
import { jsx as _jsx } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getLoadingLazyAtYPosition,
	Image,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var cycleOrder = ["MMRB_RV4g", "NwDKC01SU", "MsMKTs07X", "frzwlliSo"];
var serializationHash = "framer-ZFAcm";
var variantClassNames = {
	frzwlliSo: "framer-v-jb2163",
	MMRB_RV4g: "framer-v-3v1xi3",
	MsMKTs07X: "framer-v-17kbalj",
	NwDKC01SU: "framer-v-1qzxeu",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var toResponsiveImage = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	"Small desktop": "NwDKC01SU",
	Desktop: "MMRB_RV4g",
	Phone: "frzwlliSo",
	Tablet: "MsMKTs07X",
};
var getProps = ({ height, id, image, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "MMRB_RV4g",
		YIbpTMYRX: image ?? props.YIbpTMYRX,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const { style, className, layoutId, variant, YIbpTMYRX, ...restProps } =
		getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "MMRB_RV4g",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<Image
						{...restProps}
						{...gestureHandlers}
						background={{
							alt: "",
							fit: "fill",
							loading: getLoadingLazyAtYPosition(componentViewport?.y || 0),
							sizes: componentViewport?.width || "100vw",
							...toResponsiveImage(YIbpTMYRX),
						}}
						className={cx(
							scopingClassNames,
							"framer-3v1xi3",
							className,
							classNames,
						)}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"MMRB_RV4g"}
						ref={refBinding}
						style={{
							borderBottomLeftRadius: 10,
							borderBottomRightRadius: 10,
							borderTopLeftRadius: 10,
							borderTopRightRadius: 10,
							...style,
						}}
						{...addPropertyOverrides(
							{
								frzwlliSo: {
									"data-framer-name": "Phone",
								},
								MsMKTs07X: {
									"data-framer-name": "Tablet",
								},
								NwDKC01SU: {
									"data-framer-name": "Small desktop",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					/>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-ZFAcm.framer-zboaak, .framer-ZFAcm .framer-zboaak { display: block; }",
	".framer-ZFAcm.framer-3v1xi3 { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: 201px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 201px; will-change: var(--framer-will-change-override, transform); }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-ZFAcm.framer-3v1xi3 { gap: 0px; } .framer-ZFAcm.framer-3v1xi3 > * { margin: 0px; margin-bottom: calc(0px / 2); margin-top: calc(0px / 2); } .framer-ZFAcm.framer-3v1xi3 > :first-child { margin-top: 0px; } .framer-ZFAcm.framer-3v1xi3 > :last-child { margin-bottom: 0px; } }",
	".framer-ZFAcm.framer-v-1qzxeu.framer-3v1xi3 { aspect-ratio: 1.0025252525252526 / 1; height: var(--framer-aspect-ratio-supported, 163px); width: 163px; }",
	".framer-ZFAcm.framer-v-17kbalj.framer-3v1xi3 { aspect-ratio: 1.0025252525252526 / 1; height: var(--framer-aspect-ratio-supported, 164px); width: 164px; }",
	".framer-ZFAcm.framer-v-jb2163.framer-3v1xi3 { aspect-ratio: 1.0025252525252526 / 1; height: var(--framer-aspect-ratio-supported, 148px); width: 148px; }",
];
var FramerQNfG3nOFA = withCSS(Component, css, "framer-ZFAcm");
var stdin_default = FramerQNfG3nOFA;
FramerQNfG3nOFA.displayName = "Moment regular";
FramerQNfG3nOFA.defaultProps = {
	height: 200.5,
	width: 201,
};
addPropertyControls(FramerQNfG3nOFA, {
	variant: {
		options: ["MMRB_RV4g", "NwDKC01SU", "MsMKTs07X", "frzwlliSo"],
		optionTitles: ["Desktop", "Small desktop", "Tablet", "Phone"],
		title: "Variant",
		type: ControlType.Enum,
	},
	YIbpTMYRX: {
		description: "Place your image",
		title: "Image",
		type: ControlType.ResponsiveImage,
	},
});
addFonts(
	FramerQNfG3nOFA,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:moment-regular
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders MomentRegularFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var moment_regular_default = ComponentWithRoot;
export { moment_regular_default as default };
