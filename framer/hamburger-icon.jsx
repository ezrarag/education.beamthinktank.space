// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 4b106605c55c3c39 "Housemood (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Closed' | 'Open' | 'Closed dark' // Variant
 * click4?: Function // Click 4
}} Props

 */
import { routes } from "./chunks/chunk-6GHPDBWQ.js";

// virtual:hamburger-icon
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/u7psSlB91XtJgQGqUzh1/gbHKKaDN8V91AZJs2KkI/VvvFLVand.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	useActiveVariantCallback,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var enabledGestures = {
	apILwmM6F: {
		hover: true,
	},
	wzSVhjBCV: {
		hover: true,
	},
};
var cycleOrder = ["apILwmM6F", "Au9RvsF1Z", "wzSVhjBCV"];
var serializationHash = "framer-rlWae";
var variantClassNames = {
	apILwmM6F: "framer-v-w839jh",
	Au9RvsF1Z: "framer-v-vd5ivq",
	wzSVhjBCV: "framer-v-1obyyve",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	"Closed dark": "wzSVhjBCV",
	Closed: "apILwmM6F",
	Open: "Au9RvsF1Z",
};
var getProps = ({ click4, height, id, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "apILwmM6F",
		yfqhyl4m8: click4 ?? props.yfqhyl4m8,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const { style, className, layoutId, variant, yfqhyl4m8, ...restProps } =
		getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "apILwmM6F",
		enabledGestures,
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const { activeVariantCallback, delay } =
		useActiveVariantCallback(baseVariant);
	const onTap17v6dfa = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		if (yfqhyl4m8) {
			const res = await yfqhyl4m8(...args);
			if (res === false) return false;
		}
	});
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-w839jh",
							className,
							classNames,
						)}
						data-framer-name={"Closed"}
						data-highlight={true}
						layoutDependency={layoutDependency}
						layoutId={"apILwmM6F"}
						onTap={onTap17v6dfa}
						ref={refBinding}
						style={{
							...style,
						}}
						{...addPropertyOverrides(
							{
								"apILwmM6F-hover": {
									"data-framer-name": void 0,
								},
								"wzSVhjBCV-hover": {
									"data-framer-name": void 0,
								},
								Au9RvsF1Z: {
									"data-framer-name": "Open",
								},
								wzSVhjBCV: {
									"data-framer-name": "Closed dark",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<motion.div
							className={"framer-ui23e"}
							data-framer-name={"icon"}
							layoutDependency={layoutDependency}
							layoutId={"zh26WhFxo"}
						>
							<motion.div
								className={"framer-6mphdj"}
								layoutDependency={layoutDependency}
								layoutId={"s9JadZ_o1"}
								style={{
									backgroundColor: "rgb(255, 255, 255)",
									borderBottomLeftRadius: 1,
									borderBottomRightRadius: 1,
									borderTopLeftRadius: 1,
									borderTopRightRadius: 1,
									rotate: 0,
								}}
								variants={{
									"apILwmM6F-hover": {
										rotate: 0,
									},
									Au9RvsF1Z: {
										rotate: -45,
									},
									wzSVhjBCV: {
										backgroundColor:
											"var(--token-b58ee0c0-736b-49de-961e-77f9e9613c8d, rgb(0, 0, 0))",
										rotate: 0,
									},
								}}
							/>
							<motion.div
								className={"framer-4xye1e"}
								layoutDependency={layoutDependency}
								layoutId={"S5dudeTLE"}
								style={{
									backgroundColor: "rgb(255, 255, 255)",
									borderBottomLeftRadius: 1,
									borderBottomRightRadius: 1,
									borderTopLeftRadius: 1,
									borderTopRightRadius: 1,
									rotate: 0,
								}}
								variants={{
									"apILwmM6F-hover": {
										rotate: 0,
									},
									Au9RvsF1Z: {
										rotate: -135,
									},
									wzSVhjBCV: {
										backgroundColor:
											"var(--token-b58ee0c0-736b-49de-961e-77f9e9613c8d, rgb(0, 0, 0))",
										rotate: 0,
									},
								}}
							/>
						</motion.div>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-rlWae.framer-ltl5iu, .framer-rlWae .framer-ltl5iu { display: block; }",
	".framer-rlWae.framer-w839jh { align-content: flex-end; align-items: flex-end; cursor: pointer; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 4px; height: 12px; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: min-content; }",
	".framer-rlWae .framer-ui23e { align-content: flex-end; align-items: flex-end; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 7px; height: 12px; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: 30px; }",
	".framer-rlWae .framer-6mphdj, .framer-rlWae .framer-4xye1e { flex: none; height: 2px; overflow: visible; position: relative; width: 28px; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-rlWae.framer-w839jh, .framer-rlWae .framer-ui23e { gap: 0px; } .framer-rlWae.framer-w839jh > * { margin: 0px; margin-bottom: calc(4px / 2); margin-top: calc(4px / 2); } .framer-rlWae.framer-w839jh > :first-child, .framer-rlWae .framer-ui23e > :first-child { margin-top: 0px; } .framer-rlWae.framer-w839jh > :last-child, .framer-rlWae .framer-ui23e > :last-child { margin-bottom: 0px; } .framer-rlWae .framer-ui23e > * { margin: 0px; margin-bottom: calc(7px / 2); margin-top: calc(7px / 2); } }",
	".framer-rlWae.framer-v-vd5ivq.framer-w839jh, .framer-rlWae.framer-v-vd5ivq .framer-ui23e { height: 22px; }",
	".framer-rlWae.framer-v-vd5ivq .framer-6mphdj { left: calc(50.00000000000002% - 28px / 2); order: 0; position: absolute; top: 10px; z-index: 1; }",
	".framer-rlWae.framer-v-vd5ivq .framer-4xye1e { left: calc(50.00000000000002% - 28px / 2); order: 1; position: absolute; top: 10px; z-index: 1; }",
	".framer-rlWae.framer-v-1obyyve .framer-6mphdj { order: 1; }",
	".framer-rlWae.framer-v-1obyyve .framer-4xye1e { order: 0; }",
	".framer-rlWae.framer-v-w839jh.hover .framer-4xye1e, .framer-rlWae.framer-v-1obyyve.hover .framer-6mphdj { width: 16px; }",
];
var FramerVvvFLVand = withCSS(Component, css, "framer-rlWae");
var stdin_default = FramerVvvFLVand;
FramerVvvFLVand.displayName = "Hamburger icon";
FramerVvvFLVand.defaultProps = {
	height: 12,
	width: 30,
};
addPropertyControls(FramerVvvFLVand, {
	variant: {
		options: ["apILwmM6F", "Au9RvsF1Z", "wzSVhjBCV"],
		optionTitles: ["Closed", "Open", "Closed dark"],
		title: "Variant",
		type: ControlType.Enum,
	},
	yfqhyl4m8: {
		title: "Click 4",
		type: ControlType.EventHandler,
	},
});
addFonts(
	FramerVvvFLVand,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:hamburger-icon
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders HamburgerIconFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var hamburger_icon_default = ComponentWithRoot;
export { hamburger_icon_default as default };
