// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 4b106605c55c3c39 "Housemood (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * image1st?: {src: string, srcSet?: string, alt?: string} // Image 1st
 * image2nd?: {src: string, srcSet?: string, alt?: string} // Image 2nd
 * image3rd?: {src: string, srcSet?: string, alt?: string} // Image 3rd
}} Props

 */
import { routes } from "./chunks/chunk-6GHPDBWQ.js";

// virtual:faces
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/ltUpPyWj9LZj4QdrWwNY/NZX9BBwLrytXORMy6Wr1/U5_Fv3pUf.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getLoadingLazyAtYPosition,
	Image,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var serializationHash = "framer-maCvT";
var variantClassNames = {
	GBqhItpP1: "framer-v-s0hi9q",
};
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var toResponsiveImage = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var getProps = ({
	height,
	id,
	image1St,
	image2Nd,
	image3Rd,
	width,
	...props
}) => {
	return {
		...props,
		f74ZEq1Tw: image1St ?? props.f74ZEq1Tw,
		vKa2yduyC: image2Nd ?? props.vKa2yduyC,
		yaiw8xWfC: image3Rd ?? props.yaiw8xWfC,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className,
		layoutId,
		variant,
		f74ZEq1Tw,
		vKa2yduyC,
		yaiw8xWfC,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		defaultVariant: "GBqhItpP1",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-s0hi9q",
							className,
							classNames,
						)}
						data-framer-name={"Variant 1"}
						layoutDependency={layoutDependency}
						layoutId={"GBqhItpP1"}
						ref={refBinding}
						style={{
							...style,
						}}
					>
						<Image
							background={{
								alt: "",
								fit: "fill",
								loading: getLoadingLazyAtYPosition(
									(componentViewport?.y || 0) + 0,
								),
								sizes: "35px",
								...toResponsiveImage(f74ZEq1Tw),
							}}
							className={"framer-pod0gm"}
							data-border={true}
							data-framer-name={"Ava1"}
							layoutDependency={layoutDependency}
							layoutId={"aFYoEIGcj"}
							style={{
								"--border-bottom-width": "3px",
								"--border-color":
									"var(--token-3142cc16-0cd9-425a-970e-aecfb62e7f87, rgb(255, 255, 255))",
								"--border-left-width": "3px",
								"--border-right-width": "3px",
								"--border-style": "solid",
								"--border-top-width": "3px",
								borderBottomLeftRadius: 40,
								borderBottomRightRadius: 40,
								borderTopLeftRadius: 40,
								borderTopRightRadius: 40,
							}}
						/>
						<Image
							background={{
								alt: "",
								fit: "fill",
								loading: getLoadingLazyAtYPosition(
									(componentViewport?.y || 0) + 0,
								),
								sizes: "35px",
								...toResponsiveImage(vKa2yduyC),
							}}
							className={"framer-1gmkyss"}
							data-border={true}
							data-framer-name={"Ava2"}
							layoutDependency={layoutDependency}
							layoutId={"Y9RlXesko"}
							style={{
								"--border-bottom-width": "3px",
								"--border-color":
									"var(--token-3142cc16-0cd9-425a-970e-aecfb62e7f87, rgb(255, 255, 255))",
								"--border-left-width": "3px",
								"--border-right-width": "3px",
								"--border-style": "solid",
								"--border-top-width": "3px",
								borderBottomLeftRadius: 30,
								borderBottomRightRadius: 30,
								borderTopLeftRadius: 30,
								borderTopRightRadius: 30,
							}}
						/>
						<Image
							background={{
								alt: "",
								fit: "fill",
								loading: getLoadingLazyAtYPosition(
									(componentViewport?.y || 0) + 0,
								),
								sizes: "35px",
								...toResponsiveImage(yaiw8xWfC),
							}}
							className={"framer-jlxclv"}
							data-border={true}
							data-framer-name={"Ava3"}
							layoutDependency={layoutDependency}
							layoutId={"kJUKHrSmI"}
							style={{
								"--border-bottom-width": "3px",
								"--border-color":
									"var(--token-3142cc16-0cd9-425a-970e-aecfb62e7f87, rgb(255, 255, 255))",
								"--border-left-width": "3px",
								"--border-right-width": "3px",
								"--border-style": "solid",
								"--border-top-width": "3px",
								borderBottomLeftRadius: 30,
								borderBottomRightRadius: 30,
								borderTopLeftRadius: 30,
								borderTopRightRadius: 30,
							}}
						/>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-maCvT.framer-1aw5btw, .framer-maCvT .framer-1aw5btw { display: block; }",
	".framer-maCvT.framer-s0hi9q { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; min-width: 111px; overflow: hidden; padding: 0px; position: relative; width: min-content; }",
	".framer-maCvT .framer-pod0gm { align-content: center; align-items: center; aspect-ratio: 1 / 1; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: var(--framer-aspect-ratio-supported, 35px); justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 35px; will-change: var(--framer-will-change-override, transform); }",
	".framer-maCvT .framer-1gmkyss { align-content: center; align-items: center; bottom: 0px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; justify-content: center; left: 20px; overflow: hidden; padding: 0px; position: absolute; top: 0px; width: 35px; will-change: var(--framer-will-change-override, transform); z-index: 1; }",
	".framer-maCvT .framer-jlxclv { align-content: center; align-items: center; bottom: 0px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; justify-content: center; left: calc(50.45045045045047% - 35px / 2); overflow: hidden; padding: 0px; position: absolute; top: 0px; width: 35px; will-change: var(--framer-will-change-override, transform); z-index: 1; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-maCvT.framer-s0hi9q, .framer-maCvT .framer-pod0gm, .framer-maCvT .framer-1gmkyss, .framer-maCvT .framer-jlxclv { gap: 0px; } .framer-maCvT.framer-s0hi9q > *, .framer-maCvT .framer-pod0gm > *, .framer-maCvT .framer-1gmkyss > *, .framer-maCvT .framer-jlxclv > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-maCvT.framer-s0hi9q > :first-child, .framer-maCvT .framer-pod0gm > :first-child, .framer-maCvT .framer-1gmkyss > :first-child, .framer-maCvT .framer-jlxclv > :first-child { margin-left: 0px; } .framer-maCvT.framer-s0hi9q > :last-child, .framer-maCvT .framer-pod0gm > :last-child, .framer-maCvT .framer-1gmkyss > :last-child, .framer-maCvT .framer-jlxclv > :last-child { margin-right: 0px; } }",
	'.framer-maCvT[data-border="true"]::after, .framer-maCvT [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerU5_Fv3pUf = withCSS(Component, css, "framer-maCvT");
var stdin_default = FramerU5_Fv3pUf;
FramerU5_Fv3pUf.displayName = "Faces";
FramerU5_Fv3pUf.defaultProps = {
	height: 35,
	width: 111,
};
addPropertyControls(FramerU5_Fv3pUf, {
	f74ZEq1Tw: {
		title: "Image 1st",
		type: ControlType.ResponsiveImage,
	},
	vKa2yduyC: {
		title: "Image 2nd",
		type: ControlType.ResponsiveImage,
	},
	yaiw8xWfC: {
		description: "Place your persona avatar",
		title: "Image 3rd",
		type: ControlType.ResponsiveImage,
	},
});
addFonts(
	FramerU5_Fv3pUf,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:faces
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders FacesFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var faces_default = ComponentWithRoot;
export { faces_default as default };
