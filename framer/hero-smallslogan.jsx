// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 4b106605c55c3c39 "Housemood (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * partTop?: string // Part top
 * partBottom?: string // Part bottom
}} Props

 */
import { className, css, fonts } from "./chunks/chunk-FXKGCX3E.js";
import { routes } from "./chunks/chunk-6GHPDBWQ.js";

// virtual:hero-smallslogan
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/3WxWOjXvgRDtZJHtWP8b/sf1xalu7P4fpmS5LQMKf/rfT5JQ1TT.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getFontsFromSharedStyle,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var serializationHash = "framer-j1Xqa";
var variantClassNames = {
	j6YVZYzTZ: "framer-v-82is4l",
};
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var getProps = ({ height, id, partBottom, partTop, width, ...props }) => {
	return {
		...props,
		aglOvVM2H: partBottom ?? props.aglOvVM2H ?? "Part bottom",
		iG0Gm77Mi: partTop ?? props.iG0Gm77Mi ?? "Part top",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		iG0Gm77Mi,
		aglOvVM2H,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		defaultVariant: "j6YVZYzTZ",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-82is4l",
							className2,
							classNames,
						)}
						data-framer-name={"Variant 1"}
						layoutDependency={layoutDependency}
						layoutId={"j6YVZYzTZ"}
						ref={refBinding}
						style={{
							...style,
						}}
					>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-k9yr39"}
							fonts={["Inter"]}
							layoutDependency={layoutDependency}
							layoutId={"HtLhvTHYM"}
							style={{
								"--extracted-r6o4lv":
									"var(--token-3142cc16-0cd9-425a-970e-aecfb62e7f87, rgb(255, 255, 255))",
								"--framer-paragraph-spacing": "0px",
							}}
							text={iG0Gm77Mi}
							verticalAlignment={"top"}
							withExternalLayout={true}
						>
							<React.Fragment>
								<motion.p
									className={"framer-styles-preset-w9yjg9"}
									data-styles-preset={"CJkhvaLRU"}
									style={{
										"--framer-text-color":
											"var(--extracted-r6o4lv, var(--token-3142cc16-0cd9-425a-970e-aecfb62e7f87, rgb(255, 255, 255)))",
									}}
								>
									{"Part1"}
								</motion.p>
							</React.Fragment>
						</RichText>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-qfeomt"}
							fonts={["Inter"]}
							layoutDependency={layoutDependency}
							layoutId={"XTXUqQhyt"}
							style={{
								"--extracted-r6o4lv":
									"var(--token-801a1a18-ec2a-44b0-b58c-7538b430c2c1, rgb(241, 223, 194))",
								"--framer-paragraph-spacing": "0px",
							}}
							text={aglOvVM2H}
							verticalAlignment={"top"}
							withExternalLayout={true}
						>
							<React.Fragment>
								<motion.p
									className={"framer-styles-preset-w9yjg9"}
									data-styles-preset={"CJkhvaLRU"}
									style={{
										"--framer-text-color":
											"var(--extracted-r6o4lv, var(--token-801a1a18-ec2a-44b0-b58c-7538b430c2c1, rgb(241, 223, 194)))",
									}}
								>
									{"Part2"}
								</motion.p>
							</React.Fragment>
						</RichText>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-j1Xqa.framer-1l5p0yx, .framer-j1Xqa .framer-1l5p0yx { display: block; }",
	".framer-j1Xqa.framer-82is4l { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 2px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: 317px; }",
	".framer-j1Xqa .framer-k9yr39, .framer-j1Xqa .framer-qfeomt { -webkit-user-select: none; flex: none; height: auto; position: relative; user-select: none; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-j1Xqa.framer-82is4l { gap: 0px; } .framer-j1Xqa.framer-82is4l > * { margin: 0px; margin-bottom: calc(2px / 2); margin-top: calc(2px / 2); } .framer-j1Xqa.framer-82is4l > :first-child { margin-top: 0px; } .framer-j1Xqa.framer-82is4l > :last-child { margin-bottom: 0px; } }",
	...css,
];
var FramerrfT5JQ1TT = withCSS(Component, css2, "framer-j1Xqa");
var stdin_default = FramerrfT5JQ1TT;
FramerrfT5JQ1TT.displayName = "Hero smallslogan";
FramerrfT5JQ1TT.defaultProps = {
	height: 70,
	width: 316.5,
};
addPropertyControls(FramerrfT5JQ1TT, {
	iG0Gm77Mi: {
		defaultValue: "Part top",
		displayTextArea: false,
		title: "Part top",
		type: ControlType.String,
	},
	aglOvVM2H: {
		defaultValue: "Part bottom",
		description: "Write your slogan",
		displayTextArea: false,
		title: "Part bottom",
		type: ControlType.String,
	},
});
addFonts(
	FramerrfT5JQ1TT,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:hero-smallslogan
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders HeroSmallsloganFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var hero_smallslogan_default = ComponentWithRoot;
export { hero_smallslogan_default as default };
