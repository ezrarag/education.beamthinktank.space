"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@supabase+ssr@0.1.0_@supabase+supabase-js@2.55.0";
exports.ids = ["vendor-chunks/@supabase+ssr@0.1.0_@supabase+supabase-js@2.55.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@supabase+ssr@0.1.0_@supabase+supabase-js@2.55.0/node_modules/@supabase/ssr/dist/index.mjs":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@supabase+ssr@0.1.0_@supabase+supabase-js@2.55.0/node_modules/@supabase/ssr/dist/index.mjs ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_COOKIE_OPTIONS: () => (/* binding */ DEFAULT_COOKIE_OPTIONS),\n/* harmony export */   combineChunks: () => (/* binding */ combineChunks),\n/* harmony export */   createBrowserClient: () => (/* binding */ createBrowserClient),\n/* harmony export */   createChunks: () => (/* binding */ createChunks),\n/* harmony export */   createServerClient: () => (/* binding */ createServerClient),\n/* harmony export */   deleteChunks: () => (/* binding */ deleteChunks),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   parse: () => (/* reexport safe */ cookie__WEBPACK_IMPORTED_MODULE_0__.parse),\n/* harmony export */   serialize: () => (/* reexport safe */ cookie__WEBPACK_IMPORTED_MODULE_0__.serialize)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/supabase-js */ \"(ssr)/./node_modules/.pnpm/@supabase+supabase-js@2.55.0/node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var ramda__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ramda */ \"(ssr)/./node_modules/.pnpm/ramda@0.29.1/node_modules/ramda/es/mergeDeepRight.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ \"(ssr)/./node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\");\n// src/createBrowserClient.ts\n\n\n\n// src/utils/helpers.ts\n\nfunction isBrowser() {\n  return typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n}\n\n// src/utils/constants.ts\nvar DEFAULT_COOKIE_OPTIONS = {\n  path: \"/\",\n  sameSite: \"lax\",\n  httpOnly: false,\n  maxAge: 60 * 60 * 24 * 365 * 1e3\n};\n\n// src/utils/chunker.ts\nvar MAX_CHUNK_SIZE = 3180;\nfunction createChunks(key, value, chunkSize) {\n  const resolvedChunkSize = chunkSize ?? MAX_CHUNK_SIZE;\n  let encodedValue = encodeURIComponent(value);\n  if (encodedValue.length <= resolvedChunkSize) {\n    return [{ name: key, value }];\n  }\n  const chunks = [];\n  while (encodedValue.length > 0) {\n    let encodedChunkHead = encodedValue.slice(0, resolvedChunkSize);\n    const lastEscapePos = encodedChunkHead.lastIndexOf(\"%\");\n    if (lastEscapePos > resolvedChunkSize - 3) {\n      encodedChunkHead = encodedChunkHead.slice(0, lastEscapePos);\n    }\n    let valueHead = \"\";\n    while (encodedChunkHead.length > 0) {\n      try {\n        valueHead = decodeURIComponent(encodedChunkHead);\n        break;\n      } catch (error) {\n        if (error instanceof URIError && encodedChunkHead.at(-3) === \"%\" && encodedChunkHead.length > 3) {\n          encodedChunkHead = encodedChunkHead.slice(0, encodedChunkHead.length - 3);\n        } else {\n          throw error;\n        }\n      }\n    }\n    chunks.push(valueHead);\n    encodedValue = encodedValue.slice(encodedChunkHead.length);\n  }\n  return chunks.map((value2, i) => ({ name: `${key}.${i}`, value: value2 }));\n}\nasync function combineChunks(key, retrieveChunk) {\n  const value = await retrieveChunk(key);\n  if (value) {\n    return value;\n  }\n  let values = [];\n  for (let i = 0; ; i++) {\n    const chunkName = `${key}.${i}`;\n    const chunk = await retrieveChunk(chunkName);\n    if (!chunk) {\n      break;\n    }\n    values.push(chunk);\n  }\n  if (values.length > 0) {\n    return values.join(\"\");\n  }\n}\nasync function deleteChunks(key, retrieveChunk, removeChunk) {\n  const value = await retrieveChunk(key);\n  if (value) {\n    await removeChunk(key);\n    return;\n  }\n  for (let i = 0; ; i++) {\n    const chunkName = `${key}.${i}`;\n    const chunk = await retrieveChunk(chunkName);\n    if (!chunk) {\n      break;\n    }\n    await removeChunk(chunkName);\n  }\n}\n\n// src/createBrowserClient.ts\n\nvar cachedBrowserClient;\nfunction createBrowserClient(supabaseUrl, supabaseKey, options) {\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      `Your project's URL and Key are required to create a Supabase client!\n\nCheck your Supabase project's API settings to find these values\n\nhttps://supabase.com/dashboard/project/_/settings/api`\n    );\n  }\n  let cookies = {};\n  let isSingleton = true;\n  let cookieOptions;\n  let userDefinedClientOptions;\n  if (options) {\n    ({ cookies, isSingleton = true, cookieOptions, ...userDefinedClientOptions } = options);\n  }\n  const cookieClientOptions = {\n    global: {\n      headers: {\n        \"X-Client-Info\": `${\"supabase-ssr\"}/${\"0.1.0\"}`\n      }\n    },\n    auth: {\n      flowType: \"pkce\",\n      autoRefreshToken: isBrowser(),\n      detectSessionInUrl: isBrowser(),\n      persistSession: true,\n      storage: {\n        // this client is used on the browser so cookies can be trusted\n        isServer: false,\n        getItem: async (key) => {\n          const chunkedCookie = await combineChunks(key, async (chunkName) => {\n            if (typeof cookies.get === \"function\") {\n              return await cookies.get(chunkName);\n            }\n            if (isBrowser()) {\n              const cookie = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.parse)(document.cookie);\n              return cookie[chunkName];\n            }\n          });\n          return chunkedCookie;\n        },\n        setItem: async (key, value) => {\n          const chunks = await createChunks(key, value);\n          await Promise.all(\n            chunks.map(async (chunk) => {\n              if (typeof cookies.set === \"function\") {\n                await cookies.set(chunk.name, chunk.value, {\n                  ...DEFAULT_COOKIE_OPTIONS,\n                  ...cookieOptions,\n                  maxAge: DEFAULT_COOKIE_OPTIONS.maxAge\n                });\n              } else {\n                if (isBrowser()) {\n                  document.cookie = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.serialize)(chunk.name, chunk.value, {\n                    ...DEFAULT_COOKIE_OPTIONS,\n                    ...cookieOptions,\n                    maxAge: DEFAULT_COOKIE_OPTIONS.maxAge\n                  });\n                }\n              }\n            })\n          );\n        },\n        removeItem: async (key) => {\n          if (typeof cookies.remove === \"function\" && typeof cookies.get !== \"function\") {\n            console.log(\n              \"Removing chunked cookie without a `get` method is not supported.\\n\\n\tWhen you call the `createBrowserClient` function from the `@supabase/ssr` package, make sure you declare both a `get` and `remove` method on the `cookies` object.\\n\\nhttps://supabase.com/docs/guides/auth/server-side/creating-a-client\"\n            );\n            return;\n          }\n          await deleteChunks(\n            key,\n            async (chunkName) => {\n              if (typeof cookies.get === \"function\") {\n                return await cookies.get(chunkName);\n              }\n              if (isBrowser()) {\n                const documentCookies = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.parse)(document.cookie);\n                return documentCookies[chunkName];\n              }\n            },\n            async (chunkName) => {\n              if (typeof cookies.remove === \"function\") {\n                await cookies.remove(chunkName, {\n                  ...DEFAULT_COOKIE_OPTIONS,\n                  ...cookieOptions,\n                  maxAge: 0\n                });\n              } else {\n                if (isBrowser()) {\n                  document.cookie = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.serialize)(chunkName, \"\", {\n                    ...DEFAULT_COOKIE_OPTIONS,\n                    ...cookieOptions,\n                    maxAge: 0\n                  });\n                }\n              }\n            }\n          );\n        }\n      }\n    }\n  };\n  const clientOptions = (0,ramda__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n    cookieClientOptions,\n    userDefinedClientOptions\n  );\n  if (isSingleton) {\n    const browser = isBrowser();\n    if (browser && cachedBrowserClient) {\n      return cachedBrowserClient;\n    }\n    const client = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\n      supabaseUrl,\n      supabaseKey,\n      clientOptions\n    );\n    if (browser) {\n      cachedBrowserClient = client;\n    }\n    return client;\n  }\n  return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(supabaseUrl, supabaseKey, clientOptions);\n}\n\n// src/createServerClient.ts\n\n\nfunction createServerClient(supabaseUrl, supabaseKey, options) {\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      `Your project's URL and Key are required to create a Supabase client!\n\nCheck your Supabase project's API settings to find these values\n\nhttps://supabase.com/dashboard/project/_/settings/api`\n    );\n  }\n  const { cookies, cookieOptions, ...userDefinedClientOptions } = options;\n  if (cookieOptions == null ? void 0 : cookieOptions.name) {\n    userDefinedClientOptions.auth = {\n      ...userDefinedClientOptions.auth,\n      storageKey: cookieOptions.name\n    };\n  }\n  const cookieClientOptions = {\n    global: {\n      headers: {\n        \"X-Client-Info\": `${\"supabase-ssr\"}/${\"0.1.0\"}`\n      }\n    },\n    auth: {\n      flowType: \"pkce\",\n      autoRefreshToken: isBrowser(),\n      detectSessionInUrl: isBrowser(),\n      persistSession: true,\n      storage: {\n        // to signal to the libraries that these cookies are coming from a server environment and their value should not be trusted\n        isServer: true,\n        getItem: async (key) => {\n          const chunkedCookie = await combineChunks(key, async (chunkName) => {\n            if (typeof cookies.get === \"function\") {\n              return await cookies.get(chunkName);\n            }\n          });\n          return chunkedCookie;\n        },\n        setItem: async (key, value) => {\n          const chunks = createChunks(key, value);\n          await Promise.all(\n            chunks.map(async (chunk) => {\n              if (typeof cookies.set === \"function\") {\n                await cookies.set(chunk.name, chunk.value, {\n                  ...DEFAULT_COOKIE_OPTIONS,\n                  ...cookieOptions,\n                  maxAge: DEFAULT_COOKIE_OPTIONS.maxAge\n                });\n              }\n            })\n          );\n        },\n        removeItem: async (key) => {\n          if (typeof cookies.remove === \"function\" && typeof cookies.get !== \"function\") {\n            console.log(\n              \"Removing chunked cookie without a `get` method is not supported.\\n\\n\tWhen you call the `createServerClient` function from the `@supabase/ssr` package, make sure you declare both a `get` and `remove` method on the `cookies` object.\\n\\nhttps://supabase.com/docs/guides/auth/server-side/creating-a-client\"\n            );\n            return;\n          }\n          deleteChunks(\n            key,\n            async (chunkName) => {\n              if (typeof cookies.get === \"function\") {\n                return await cookies.get(chunkName);\n              }\n            },\n            async (chunkName) => {\n              if (typeof cookies.remove === \"function\") {\n                return await cookies.remove(chunkName, {\n                  ...DEFAULT_COOKIE_OPTIONS,\n                  ...cookieOptions,\n                  maxAge: 0\n                });\n              }\n            }\n          );\n        }\n      }\n    }\n  };\n  const clientOptions = (0,ramda__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n    cookieClientOptions,\n    userDefinedClientOptions\n  );\n  return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(supabaseUrl, supabaseKey, clientOptions);\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@supabase+ssr@0.1.0_@supabase+supabase-js@2.55.0/node_modules/@supabase/ssr/dist/index.mjs\n");

/***/ })

};
;