// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 4b106605c55c3c39 "Housemood (copy)", do not edit manually */
// /:https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js
import { addPropertyControls as e5, ControlType as l2, QueryCache as t4, QueryEngine as a2 } from "unframer";

// /:https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9-0.js
import { ControlType as v } from "unframer";
import { ControlType as x } from "unframer";
var t;
var e = Object.create;
var r = Object.defineProperty;
var n = Object.getOwnPropertyDescriptor;
var i = Object.getOwnPropertyNames;
var s = Object.getPrototypeOf;
var a = Object.prototype.hasOwnProperty;
var o = (t32, e42, n2) => e42 in t32 ? r(t32, e42, { enumerable: true, configurable: true, writable: true, value: n2 }) : t32[e42] = n2;
var u = (t32, e42) => function() {
  return e42 || (0, t32[i(t32)[0]])((e42 = { exports: {} }).exports, e42), e42.exports;
};
var l = (t32, e42, s22, o22) => {
  if (e42 && "object" == typeof e42 || "function" == typeof e42) for (let u22 of i(e42)) a.call(t32, u22) || u22 === s22 || r(t32, u22, { get: () => e42[u22], enumerable: !(o22 = n(e42, u22)) || o22.enumerable });
  return t32;
};
var h = (t32, n2, i22) => (i22 = null != t32 ? e(s(t32)) : {}, l(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  !n2 && t32 && t32.__esModule ? i22 : r(i22, "default", { value: t32, enumerable: true }),
  t32
));
var c = (t32, e42, r2) => o(t32, "symbol" != typeof e42 ? e42 + "" : e42, r2);
var f = u({ "../../../node_modules/dataloader/index.js"(t32, e42) {
  var r2, n2 = /* @__PURE__ */ (function() {
    function t42(t5, e6) {
      if ("function" != typeof t5) throw TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but got: " + t5 + ".");
      this._batchLoadFn = t5, this._maxBatchSize = (function(t6) {
        if (!(!t6 || false !== t6.batch)) return 1;
        var e7 = t6 && t6.maxBatchSize;
        if (void 0 === e7) return 1 / 0;
        if ("number" != typeof e7 || e7 < 1) throw TypeError("maxBatchSize must be a positive number: " + e7);
        return e7;
      })(e6), this._batchScheduleFn = (function(t6) {
        var e7 = t6 && t6.batchScheduleFn;
        if (void 0 === e7) return i22;
        if ("function" != typeof e7) throw TypeError("batchScheduleFn must be a function: " + e7);
        return e7;
      })(e6), this._cacheKeyFn = (function(t6) {
        var e7 = t6 && t6.cacheKeyFn;
        if (void 0 === e7) return function(t7) {
          return t7;
        };
        if ("function" != typeof e7) throw TypeError("cacheKeyFn must be a function: " + e7);
        return e7;
      })(e6), this._cacheMap = (function(t6) {
        if (!(!t6 || false !== t6.cache)) return null;
        var e7 = t6 && t6.cacheMap;
        if (void 0 === e7) return /* @__PURE__ */ new Map();
        if (null !== e7) {
          var r3 = ["get", "set", "delete", "clear"].filter(function(t7) {
            return e7 && "function" != typeof e7[t7];
          });
          if (0 !== r3.length) throw TypeError("Custom cacheMap missing methods: " + r3.join(", "));
        }
        return e7;
      })(e6), this._batch = null, this.name = e6 && e6.name ? e6.name : null;
    }
    var e52 = t42.prototype;
    return e52.load = function(t5) {
      if (null == t5) throw TypeError("The loader.load() function must be called with a value, but got: " + String(t5) + ".");
      var e6 = (function(t6) {
        var e7 = t6._batch;
        if (null !== e7 && !e7.hasDispatched && e7.keys.length < t6._maxBatchSize) return e7;
        var r4 = { hasDispatched: false, keys: [], callbacks: [] };
        return t6._batch = r4, t6._batchScheduleFn(function() {
          (function(t7, e8) {
            var r5;
            if (e8.hasDispatched = true, 0 === e8.keys.length) {
              a22(e8);
              return;
            }
            try {
              r5 = t7._batchLoadFn(e8.keys);
            } catch (r6) {
              return s22(t7, e8, TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function errored synchronously: " + String(r6) + "."));
            }
            if (!r5 || "function" != typeof r5.then) return s22(t7, e8, TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise: " + String(r5) + "."));
            r5.then(function(t8) {
              if (!o22(t8)) throw TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise of an Array: " + String(t8) + ".");
              if (t8.length !== e8.keys.length) throw TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise of an Array of the same length as the Array of keys.\n\nKeys:\n" + String(e8.keys) + "\n\nValues:\n" + String(t8));
              a22(e8);
              for (var r6 = 0; r6 < e8.callbacks.length; r6++) {
                var n4 = t8[r6];
                n4 instanceof Error ? e8.callbacks[r6].reject(n4) : e8.callbacks[r6].resolve(n4);
              }
            }).catch(function(r6) {
              s22(t7, e8, r6);
            });
          })(t6, r4);
        }), r4;
      })(this), r3 = this._cacheMap, n3 = this._cacheKeyFn(t5);
      if (r3) {
        var i3 = r3.get(n3);
        if (i3) {
          var u22 = e6.cacheHits || (e6.cacheHits = []);
          return new Promise(function(t6) {
            u22.push(function() {
              t6(i3);
            });
          });
        }
      }
      e6.keys.push(t5);
      var l22 = new Promise(function(t6, r4) {
        e6.callbacks.push({ resolve: t6, reject: r4 });
      });
      return r3 && r3.set(n3, l22), l22;
    }, e52.loadMany = function(t5) {
      if (!o22(t5)) throw TypeError("The loader.loadMany() function must be called with Array<key> but got: " + t5 + ".");
      for (var e6 = [], r3 = 0; r3 < t5.length; r3++) e6.push(this.load(t5[r3]).catch(function(t6) {
        return t6;
      }));
      return Promise.all(e6);
    }, e52.clear = function(t5) {
      var e6 = this._cacheMap;
      if (e6) {
        var r3 = this._cacheKeyFn(t5);
        e6.delete(r3);
      }
      return this;
    }, e52.clearAll = function() {
      var t5 = this._cacheMap;
      return t5 && t5.clear(), this;
    }, e52.prime = function(t5, e6) {
      var r3 = this._cacheMap;
      if (r3) {
        var n3, i3 = this._cacheKeyFn(t5);
        void 0 === r3.get(i3) && (e6 instanceof Error ? (n3 = Promise.reject(e6)).catch(function() {
        }) : n3 = Promise.resolve(e6), r3.set(i3, n3));
      }
      return this;
    }, t42;
  })(), i22 = "object" == typeof process && "function" == typeof process.nextTick ? function(t42) {
    r2 || (r2 = Promise.resolve()), r2.then(function() {
      process.nextTick(t42);
    });
  } : "function" == typeof setImmediate ? function(t42) {
    setImmediate(t42);
  } : function(t42) {
    setTimeout(t42);
  };
  function s22(t42, e52, r3) {
    a22(e52);
    for (var n3 = 0; n3 < e52.keys.length; n3++) t42.clear(e52.keys[n3]), e52.callbacks[n3].reject(r3);
  }
  function a22(t42) {
    if (t42.cacheHits) for (var e52 = 0; e52 < t42.cacheHits.length; e52++) t42.cacheHits[e52]();
  }
  function o22(t42) {
    return "object" == typeof t42 && null !== t42 && "number" == typeof t42.length && (0 === t42.length || t42.length > 0 && Object.prototype.hasOwnProperty.call(t42, t42.length - 1));
  }
  e42.exports = n2;
} });
var g = h(f());
var d = { Uint8: 1, Uint16: 2, Uint32: 4, BigUint64: 8, Int8: 1, Int16: 2, Int32: 4, BigInt64: 8, Float32: 4, Float64: 8 };
var y = class {
  getOffset() {
    return this.offset;
  }
  ensureLength(t32) {
    let e42 = this.bytes.length;
    if (!(this.offset + t32 <= e42)) throw Error("Reading out of bounds");
  }
  readUint8() {
    let t32 = d.Uint8;
    this.ensureLength(t32);
    let e42 = this.view.getUint8(this.offset);
    return this.offset += t32, e42;
  }
  readUint16() {
    let t32 = d.Uint16;
    this.ensureLength(t32);
    let e42 = this.view.getUint16(this.offset);
    return this.offset += t32, e42;
  }
  readUint32() {
    let t32 = d.Uint32;
    this.ensureLength(t32);
    let e42 = this.view.getUint32(this.offset);
    return this.offset += t32, e42;
  }
  readUint64() {
    let t32 = this.readBigUint64();
    return Number(t32);
  }
  readBigUint64() {
    let t32 = d.BigUint64;
    this.ensureLength(t32);
    let e42 = this.view.getBigUint64(this.offset);
    return this.offset += t32, e42;
  }
  readInt8() {
    let t32 = d.Int8;
    this.ensureLength(t32);
    let e42 = this.view.getInt8(this.offset);
    return this.offset += t32, e42;
  }
  readInt16() {
    let t32 = d.Int16;
    this.ensureLength(t32);
    let e42 = this.view.getInt16(this.offset);
    return this.offset += t32, e42;
  }
  readInt32() {
    let t32 = d.Int32;
    this.ensureLength(t32);
    let e42 = this.view.getInt32(this.offset);
    return this.offset += t32, e42;
  }
  readInt64() {
    let t32 = this.readBigInt64();
    return Number(t32);
  }
  readBigInt64() {
    let t32 = d.BigInt64;
    this.ensureLength(t32);
    let e42 = this.view.getBigInt64(this.offset);
    return this.offset += t32, e42;
  }
  readFloat32() {
    let t32 = d.Float32;
    this.ensureLength(t32);
    let e42 = this.view.getFloat32(this.offset);
    return this.offset += t32, e42;
  }
  readFloat64() {
    let t32 = d.Float64;
    this.ensureLength(t32);
    let e42 = this.view.getFloat64(this.offset);
    return this.offset += t32, e42;
  }
  readBytes(t32) {
    let e42 = this.offset, r2 = e42 + t32, n2 = this.bytes.subarray(e42, r2);
    return this.offset = r2, n2;
  }
  readString() {
    let t32 = this.readUint32(), e42 = this.readBytes(t32);
    return this.decoder.decode(e42);
  }
  readJson() {
    let t32 = this.readString();
    return JSON.parse(t32);
  }
  constructor(t32) {
    this.bytes = t32, c(this, "offset", 0), c(this, "view"), c(this, "decoder", new TextDecoder()), this.view = p(this.bytes);
  }
};
function p(t32) {
  return new DataView(t32.buffer, t32.byteOffset, t32.byteLength);
}
var m = "undefined" != typeof window;
var w = m && "function" == typeof window.requestIdleCallback;
function I(t32, ...e42) {
  if (!t32) throw Error("Assertion Error" + (e42.length > 0 ? ": " + e42.join(" ") : ""));
}
function b(t32) {
  throw Error(`Unexpected value: ${t32}`);
}
var U = 1024;
var S = 1.5;
var k = (t32) => 2 ** t32 - 1;
var L = (t32) => -(2 ** (t32 - 1));
var B = (t32) => 2 ** (t32 - 1) - 1;
var E = { Uint8: 0, Uint16: 0, Uint32: 0, Uint64: 0, BigUint64: 0, Int8: L(8), Int16: L(16), Int32: L(32), Int64: Number.MIN_SAFE_INTEGER, BigInt64: -(BigInt(2) ** BigInt(63)) };
var M = { Uint8: k(8), Uint16: k(16), Uint32: k(32), Uint64: Number.MAX_SAFE_INTEGER, BigUint64: BigInt(2) ** BigInt(64) - BigInt(1), Int8: B(8), Int16: B(16), Int32: B(32), Int64: Number.MAX_SAFE_INTEGER, BigInt64: BigInt(2) ** BigInt(63) - BigInt(1) };
function T(t32, e42, r2, n2) {
  I(t32 >= e42, t32, "outside lower bound for", n2), I(t32 <= r2, t32, "outside upper bound for", n2);
}
var F = class {
  getOffset() {
    return this.offset;
  }
  slice(t32 = 0, e42 = this.offset) {
    return this.bytes.slice(t32, e42);
  }
  subarray(t32 = 0, e42 = this.offset) {
    return this.bytes.subarray(t32, e42);
  }
  ensureLength(t32) {
    let e42 = this.bytes.length;
    if (this.offset + t32 <= e42) return;
    let r2 = new Uint8Array(Math.ceil(e42 * S) + t32);
    r2.set(this.bytes), this.bytes = r2, this.view = p(r2);
  }
  writeUint8(t32) {
    T(t32, E.Uint8, M.Uint8, "Uint8");
    let e42 = d.Uint8;
    this.ensureLength(e42), this.view.setUint8(this.offset, t32), this.offset += e42;
  }
  writeUint16(t32) {
    T(t32, E.Uint16, M.Uint16, "Uint16");
    let e42 = d.Uint16;
    this.ensureLength(e42), this.view.setUint16(this.offset, t32), this.offset += e42;
  }
  writeUint32(t32) {
    T(t32, E.Uint32, M.Uint32, "Uint32");
    let e42 = d.Uint32;
    this.ensureLength(e42), this.view.setUint32(this.offset, t32), this.offset += e42;
  }
  writeUint64(t32) {
    T(t32, E.Uint64, M.Uint64, "Uint64");
    let e42 = BigInt(t32);
    this.writeBigUint64(e42);
  }
  writeBigUint64(t32) {
    T(t32, E.BigUint64, M.BigUint64, "BigUint64");
    let e42 = d.BigUint64;
    this.ensureLength(e42), this.view.setBigUint64(this.offset, t32), this.offset += e42;
  }
  writeInt8(t32) {
    T(t32, E.Int8, M.Int8, "Int8");
    let e42 = d.Int8;
    this.ensureLength(e42), this.view.setInt8(this.offset, t32), this.offset += e42;
  }
  writeInt16(t32) {
    T(t32, E.Int16, M.Int16, "Int16");
    let e42 = d.Int16;
    this.ensureLength(e42), this.view.setInt16(this.offset, t32), this.offset += e42;
  }
  writeInt32(t32) {
    T(t32, E.Int32, M.Int32, "Int32");
    let e42 = d.Int32;
    this.ensureLength(e42), this.view.setInt32(this.offset, t32), this.offset += e42;
  }
  writeInt64(t32) {
    T(t32, E.Int64, M.Int64, "Int64");
    let e42 = BigInt(t32);
    this.writeBigInt64(e42);
  }
  writeBigInt64(t32) {
    T(t32, E.BigInt64, M.BigInt64, "BigInt64");
    let e42 = d.BigInt64;
    this.ensureLength(e42), this.view.setBigInt64(this.offset, t32), this.offset += e42;
  }
  writeFloat32(t32) {
    let e42 = d.Float32;
    this.ensureLength(e42), this.view.setFloat32(this.offset, t32), this.offset += e42;
  }
  writeFloat64(t32) {
    let e42 = d.Float64;
    this.ensureLength(e42), this.view.setFloat64(this.offset, t32), this.offset += e42;
  }
  writeBytes(t32) {
    let e42 = t32.length;
    this.ensureLength(e42), this.bytes.set(t32, this.offset), this.offset += e42;
  }
  encodeString(t32) {
    let e42 = this.encodedStrings.get(t32);
    if (e42) return e42;
    let r2 = this.encoder.encode(t32);
    return this.encodedStrings.set(t32, r2), r2;
  }
  writeString(t32) {
    let e42 = this.encodeString(t32), r2 = e42.length;
    this.writeUint32(r2), this.writeBytes(e42);
  }
  writeJson(t32) {
    let e42 = JSON.stringify(t32);
    this.writeString(e42);
  }
  constructor() {
    c(this, "offset", 0), c(this, "bytes", new Uint8Array(U)), c(this, "view", p(this.bytes)), c(this, "encoder", new TextEncoder()), c(this, "encodedStrings", /* @__PURE__ */ new Map());
  }
};
function N(t32) {
  return Number.isFinite(t32);
}
function A(t32) {
  return null === t32;
}
var O = class t2 {
  static fromString(e42) {
    let [r2, n2, i22] = e42.split("/").map(Number);
    return I(N(r2), "Invalid chunkId"), I(N(n2), "Invalid offset"), I(N(i22), "Invalid length"), new t2(r2, n2, i22);
  }
  toString() {
    return `${this.chunkId}/${this.offset}/${this.length}`;
  }
  static read(e42) {
    let r2 = e42.readUint16(), n2 = e42.readUint32(), i22 = e42.readUint32();
    return new t2(r2, n2, i22);
  }
  write(t32) {
    t32.writeUint16(this.chunkId), t32.writeUint32(this.offset), t32.writeUint32(this.length);
  }
  compare(t32) {
    return this.chunkId < t32.chunkId ? -1 : this.chunkId > t32.chunkId ? 1 : this.offset < t32.offset ? -1 : this.offset > t32.offset ? 1 : (I(this.length === t32.length), 0);
  }
  constructor(t32, e42, r2) {
    this.chunkId = t32, this.offset = e42, this.length = r2;
  }
};
function P(t32) {
  if (A(t32)) return 0;
  switch (t32.type) {
    case x.Array:
      return 1;
    case x.Boolean:
      return 2;
    case x.Color:
      return 3;
    case x.Date:
      return 4;
    case x.Enum:
      return 5;
    case x.File:
      return 6;
    case x.ResponsiveImage:
      return 10;
    case x.Link:
      return 7;
    case x.Number:
      return 8;
    case x.Object:
      return 9;
    case x.RichText:
      return 11;
    case x.String:
      return 12;
    default:
      b(t32);
  }
}
function R(e42) {
  let r2 = e42.readUint16(), n2 = [];
  for (let i22 = 0; i22 < r2; i22++) {
    let r3 = t.read(e42);
    n2.push(r3);
  }
  return { type: x.Array, value: n2 };
}
function q(e42, r2) {
  for (let n2 of (e42.writeUint16(r2.value.length), r2.value)) t.write(e42, n2);
}
function _(e42, r2, n2) {
  let i22 = e42.value.length, s22 = r2.value.length;
  if (i22 < s22) return -1;
  if (i22 > s22) return 1;
  for (let s3 = 0; s3 < i22; s3++) {
    let i3 = e42.value[s3], a22 = r2.value[s3], o22 = t.compare(i3, a22, n2);
    if (0 !== o22) return o22;
  }
  return 0;
}
function D(t32) {
  return { type: x.Boolean, value: 0 !== t32.readUint8() };
}
function j(t32, e42) {
  t32.writeUint8(e42.value ? 1 : 0);
}
function C(t32, e42) {
  return t32.value < e42.value ? -1 : t32.value > e42.value ? 1 : 0;
}
function J(t32) {
  return { type: x.Color, value: t32.readString() };
}
function W(t32, e42) {
  t32.writeString(e42.value);
}
function $(t32, e42) {
  return t32.value < e42.value ? -1 : t32.value > e42.value ? 1 : 0;
}
function z(t32) {
  let e42 = t32.readInt64(), r2 = new Date(e42);
  return { type: x.Date, value: r2.toISOString() };
}
function G(t32, e42) {
  let r2 = new Date(e42.value), n2 = r2.getTime();
  t32.writeInt64(n2);
}
function K(t32, e42) {
  let r2 = new Date(t32.value), n2 = new Date(e42.value);
  return r2 < n2 ? -1 : r2 > n2 ? 1 : 0;
}
function H(t32) {
  return { type: x.Enum, value: t32.readString() };
}
function V(t32, e42) {
  t32.writeString(e42.value);
}
function X(t32, e42) {
  return t32.value < e42.value ? -1 : t32.value > e42.value ? 1 : 0;
}
function Q(t32) {
  return { type: x.File, value: t32.readString() };
}
function Y(t32, e42) {
  t32.writeString(e42.value);
}
function Z(t32, e42) {
  return t32.value < e42.value ? -1 : t32.value > e42.value ? 1 : 0;
}
function tt(t32) {
  return { type: x.Link, value: t32.readJson() };
}
function te(t32, e42) {
  t32.writeJson(e42.value);
}
function tr(t32, e42) {
  let r2 = JSON.stringify(t32.value), n2 = JSON.stringify(e42.value);
  return r2 < n2 ? -1 : r2 > n2 ? 1 : 0;
}
function tn(t32) {
  return { type: x.Number, value: t32.readFloat64() };
}
function ti(t32, e42) {
  t32.writeFloat64(e42.value);
}
function ts(t32, e42) {
  return t32.value < e42.value ? -1 : t32.value > e42.value ? 1 : 0;
}
function ta(e42) {
  let r2 = e42.readUint16(), n2 = {};
  for (let i22 = 0; i22 < r2; i22++) {
    let r3 = e42.readString();
    n2[r3] = t.read(e42);
  }
  return { type: x.Object, value: n2 };
}
function to(e42, r2) {
  let n2 = Object.entries(r2.value);
  for (let [r3, i22] of (e42.writeUint16(n2.length), n2)) e42.writeString(r3), t.write(e42, i22);
}
function tu(e42, r2, n2) {
  let i22 = Object.keys(e42.value).sort(), s22 = Object.keys(r2.value).sort();
  if (i22.length < s22.length) return -1;
  if (i22.length > s22.length) return 1;
  for (let a22 = 0; a22 < i22.length; a22++) {
    let o22 = i22[a22], u22 = s22[a22];
    if (o22 < u22) return -1;
    if (o22 > u22) return 1;
    let l22 = e42.value[o22] ?? null, h22 = r2.value[u22] ?? null, c22 = t.compare(l22, h22, n2);
    if (0 !== c22) return c22;
  }
  return 0;
}
function tl(t32) {
  return { type: x.ResponsiveImage, value: t32.readJson() };
}
function th(t32, e42) {
  t32.writeJson(e42.value);
}
function tc(t32, e42) {
  let r2 = JSON.stringify(t32.value), n2 = JSON.stringify(e42.value);
  return r2 < n2 ? -1 : r2 > n2 ? 1 : 0;
}
function tf(t32) {
  return { type: x.RichText, value: t32.readUint32() };
}
function tg(t32, e42) {
  t32.writeUint32(e42.value);
}
function td(t32, e42) {
  let r2 = t32.value, n2 = e42.value;
  return r2 < n2 ? -1 : r2 > n2 ? 1 : 0;
}
function ty(t32) {
  return { type: x.String, value: t32.readString() };
}
function tp(t32, e42) {
  t32.writeString(e42.value);
}
function tv(t32, e42, r2) {
  let n2 = t32.value, i22 = e42.value;
  return (0 === r2.type && (n2 = t32.value.toLowerCase(), i22 = e42.value.toLowerCase()), n2 < i22) ? -1 : n2 > i22 ? 1 : 0;
}
((t32) => {
  t32.read = function(t42) {
    let e42 = t42.readUint8();
    switch (e42) {
      case 0:
        return null;
      case 1:
        return R(t42);
      case 2:
        return D(t42);
      case 3:
        return J(t42);
      case 4:
        return z(t42);
      case 5:
        return H(t42);
      case 6:
        return Q(t42);
      case 7:
        return tt(t42);
      case 8:
        return tn(t42);
      case 9:
        return ta(t42);
      case 10:
        return tl(t42);
      case 11:
        return tf(t42);
      case 12:
        return ty(t42);
      default:
        b(e42);
    }
  }, t32.write = function(t42, e42) {
    let r2 = P(e42);
    if (t42.writeUint8(r2), !A(e42)) switch (e42.type) {
      case x.Array:
        return q(t42, e42);
      case x.Boolean:
        return j(t42, e42);
      case x.Color:
        return W(t42, e42);
      case x.Date:
        return G(t42, e42);
      case x.Enum:
        return V(t42, e42);
      case x.File:
        return Y(t42, e42);
      case x.Link:
        return te(t42, e42);
      case x.Number:
        return ti(t42, e42);
      case x.Object:
        return to(t42, e42);
      case x.ResponsiveImage:
        return th(t42, e42);
      case x.RichText:
        return tg(t42, e42);
      case x.String:
        return tp(t42, e42);
      default:
        b(e42);
    }
  }, t32.compare = function(t42, e42, r2) {
    let n2 = P(t42), i22 = P(e42);
    if (n2 < i22) return -1;
    if (n2 > i22) return 1;
    if (A(t42) || A(e42)) return 0;
    switch (t42.type) {
      case x.Array:
        return I(e42.type === x.Array), _(t42, e42, r2);
      case x.Boolean:
        return I(e42.type === x.Boolean), C(t42, e42);
      case x.Color:
        return I(e42.type === x.Color), $(t42, e42);
      case x.Date:
        return I(e42.type === x.Date), K(t42, e42);
      case x.Enum:
        return I(e42.type === x.Enum), X(t42, e42);
      case x.File:
        return I(e42.type === x.File), Z(t42, e42);
      case x.Link:
        return I(e42.type === x.Link), tr(t42, e42);
      case x.Number:
        return I(e42.type === x.Number), ts(t42, e42);
      case x.Object:
        return I(e42.type === x.Object), tu(t42, e42, r2);
      case x.ResponsiveImage:
        return I(e42.type === x.ResponsiveImage), tc(t42, e42);
      case x.RichText:
        return I(e42.type === x.RichText), td(t42, e42);
      case x.String:
        return I(e42.type === x.String), tv(t42, e42, r2);
      default:
        b(t42);
    }
  };
})(t || (t = {}));
var tm = class e2 {
  sortEntries() {
    this.entries.sort((e42, r2) => {
      for (let n2 = 0; n2 < this.fieldNames.length; n2++) {
        let i22 = e42.values[n2], s22 = r2.values[n2], a22 = t.compare(i22, s22, this.options.collation);
        if (0 !== a22) return a22;
      }
      return e42.pointer.compare(r2.pointer);
    });
  }
  static deserialize(r2) {
    let n2 = new y(r2), i22 = n2.readJson(), s22 = n2.readUint8(), a22 = [];
    for (let t32 = 0; t32 < s22; t32++) {
      let t42 = n2.readString();
      a22.push(t42);
    }
    let o22 = new e2(a22, { collation: i22 }), u22 = n2.readUint32();
    for (let e42 = 0; e42 < u22; e42++) {
      let e52 = [];
      for (let r4 = 0; r4 < s22; r4++) {
        let r5 = t.read(n2);
        e52.push(r5);
      }
      let r3 = O.read(n2);
      o22.entries.push({ values: e52, pointer: r3 });
    }
    return o22;
  }
  serialize() {
    let e42 = new F();
    for (let t32 of (e42.writeJson(this.options.collation), e42.writeUint8(this.fieldNames.length), this.fieldNames)) e42.writeString(t32);
    for (let r2 of (this.sortEntries(), e42.writeUint32(this.entries.length), this.entries)) {
      let { values: n2, pointer: i22 } = r2;
      for (let r3 of n2) t.write(e42, r3);
      i22.write(e42);
    }
    return e42.subarray();
  }
  addItem(t32, e42) {
    let r2 = this.fieldNames.map((e52) => t32.getField(e52) ?? null);
    this.entries.push({ values: r2, pointer: e42 });
  }
  constructor(t32, e42) {
    this.fieldNames = t32, this.options = e42, c(this, "entries", []);
  }
};
var tw = 3;
var tI = 250;
var tb = [
  408,
  // Request Timeout
  429,
  // Too Many Requests
  500,
  // Internal Server Error
  502,
  // Bad Gateway
  503,
  // Service Unavailable
  504
];
var tU = async (t32, e42) => {
  let r2 = 0;
  for (; ; ) {
    try {
      let n2 = await fetch(t32, e42);
      if (!tb.includes(n2.status) || ++r2 > tw) return n2;
    } catch (t42) {
      if (e42?.signal?.aborted || ++r2 > tw) throw t42;
    }
    await tS(r2);
  }
};
async function tS(t32) {
  let e42 = Math.floor(tI * (Math.random() + 1) * 2 ** (t32 - 1));
  await new Promise((t42) => {
    setTimeout(t42, e42);
  });
}
async function tk(t32, e42) {
  let r2 = tE(e42), n2 = [], i22 = 0;
  for (let t42 of r2) n2.push(`${t42.from}-${t42.to - 1}`), i22 += t42.to - t42.from;
  let s22 = new URL(t32), a22 = n2.join(",");
  s22.searchParams.set("range", a22);
  let o22 = await tU(s22);
  if (200 !== o22.status) throw Error(`Request failed: ${o22.status} ${o22.statusText}`);
  let u22 = await o22.arrayBuffer(), l22 = new Uint8Array(u22);
  if (l22.length !== i22) throw Error("Request failed: Unexpected response length");
  let h22 = new tL(), c22 = 0;
  for (let t42 of r2) {
    let e52 = t42.to - t42.from, r3 = c22 + e52, n3 = l22.subarray(c22, r3);
    h22.write(t42.from, n3), c22 = r3;
  }
  return e42.map((t42) => h22.read(t42.from, t42.to - t42.from));
}
var tL = class {
  read(t32, e42) {
    for (let r2 of this.chunks) {
      if (t32 < r2.start) break;
      if (t32 > r2.end) continue;
      if (t32 + e42 > r2.end) break;
      let n2 = t32 - r2.start, i22 = n2 + e42;
      return r2.data.slice(n2, i22);
    }
    throw Error("Missing data");
  }
  write(t32, e42) {
    let r2 = t32, n2 = r2 + e42.length, i22 = 0, s22 = this.chunks.length;
    for (; i22 < s22; i22++) {
      let t42 = this.chunks[i22];
      if (I(t42, "Missing chunk"), !(r2 > t42.end)) {
        if (r2 > t42.start) {
          let n3 = r2 - t42.start, i3 = t42.data.subarray(0, n3);
          e42 = tB(i3, e42), r2 = t42.start;
        }
        break;
      }
    }
    for (; s22 > i22; s22--) {
      let t42 = this.chunks[s22 - 1];
      if (I(t42, "Missing chunk"), !(n2 < t42.start)) {
        if (n2 < t42.end) {
          let r3 = n2 - t42.start, i3 = t42.data.subarray(r3);
          e42 = tB(e42, i3), n2 = t42.end;
        }
        break;
      }
    }
    let a22 = { start: r2, end: n2, data: e42 }, o22 = s22 - i22;
    this.chunks.splice(i22, o22, a22);
  }
  constructor() {
    c(this, "chunks", []);
  }
};
function tB(t32, e42) {
  let r2 = t32.length + e42.length, n2 = new Uint8Array(r2);
  return n2.set(t32, 0), n2.set(e42, t32.length), n2;
}
function tE(t32) {
  I(t32.length > 0, "Must have at least one range");
  let e42 = [...t32].sort((t42, e52) => t42.from - e52.from), r2 = [];
  for (let t42 of e42) {
    let e52 = r2.length - 1, n2 = r2[e52];
    n2 && t42.from <= n2.to ? r2[e52] = { from: n2.from, to: Math.max(n2.to, t42.to) } : r2.push(t42);
  }
  return r2;
}
var tM = class {
  async loadModel() {
    let [t32] = await tk(this.options.url, [this.options.range]);
    return I(t32, "Failed to load model"), tm.deserialize(t32);
  }
  async getModel() {
    return this.modelPromise ??= this.loadModel(), this.model ??= await this.modelPromise, this.model;
  }
  async lookupItems(t32) {
    I(t32.length === this.fields.length, "Invalid query length");
    let e42 = await this.getModel(), r2 = t32.reduce((t42, e52, r3) => t42.flatMap((t5) => {
      switch (e52.type) {
        case "All":
          return [t5];
        case "Equals":
          return this.queryEquals(t5, e52, r3);
        case "NotEquals":
          return this.queryNotEquals(t5, e52, r3);
        case "LessThan":
          return this.queryLessThan(t5, e52, r3);
        case "GreaterThan":
          return this.queryGreaterThan(t5, e52, r3);
        case "Contains":
          return this.queryContains(t5, e52, r3);
        case "StartsWith":
          return this.queryStartsWith(t5, e52, r3);
        case "EndsWith":
          return this.queryEndsWith(t5, e52, r3);
        default:
          b(e52);
      }
    }), [e42.entries]), n2 = [];
    for (let t42 of r2) for (let e52 of t42) {
      let t5 = {};
      for (let r3 = 0; r3 < this.options.fieldNames.length; r3++) {
        let n3 = this.options.fieldNames[r3], i22 = e52.values[r3];
        t5[n3] = i22;
      }
      n2.push({ pointer: e52.pointer.toString(), data: t5 });
    }
    return n2;
  }
  queryEquals(t32, e42, r2) {
    let n2 = this.getLeftMost(t32, r2, e42.value), i22 = this.getRightMost(t32, r2, e42.value), s22 = t32.slice(n2, i22 + 1);
    return s22.length > 0 ? [s22] : [];
  }
  queryNotEquals(t32, e42, r2) {
    let n2 = this.getLeftMost(t32, r2, e42.value), i22 = this.getRightMost(t32, r2, e42.value), s22 = [], a22 = t32.slice(0, n2);
    a22.length > 0 && s22.push(a22);
    let o22 = t32.slice(i22 + 1);
    return o22.length > 0 && s22.push(o22), s22;
  }
  queryLessThan(t32, e42, r2) {
    let n2 = this.getRightMost(t32, r2, null);
    if (t32 = t32.slice(n2 + 1), e42.inclusive) {
      let n3 = this.getRightMost(t32, r2, e42.value), i3 = t32.slice(0, n3 + 1);
      return i3.length > 0 ? [i3] : [];
    }
    let i22 = this.getLeftMost(t32, r2, e42.value), s22 = t32.slice(0, i22);
    return s22.length > 0 ? [s22] : [];
  }
  queryGreaterThan(t32, e42, r2) {
    let n2 = this.getRightMost(t32, r2, null);
    if (t32 = t32.slice(n2 + 1), e42.inclusive) {
      let n3 = this.getLeftMost(t32, r2, e42.value), i3 = t32.slice(n3);
      return i3.length > 0 ? [i3] : [];
    }
    let i22 = this.getRightMost(t32, r2, e42.value), s22 = t32.slice(i22 + 1);
    return s22.length > 0 ? [s22] : [];
  }
  queryContains(t32, e42, r2) {
    return this.findItems(t32, r2, (t42) => {
      if (t42?.type !== v.String || e42.value?.type !== v.String) return false;
      let r3 = t42.value, n2 = e42.value.value;
      return 0 === this.collation.type && (r3 = r3.toLowerCase(), n2 = n2.toLowerCase()), r3.includes(n2);
    });
  }
  queryStartsWith(t32, e42, r2) {
    return this.findItems(t32, r2, (t42) => {
      if (t42?.type !== v.String || e42.value?.type !== v.String) return false;
      let r3 = t42.value, n2 = e42.value.value;
      return 0 === this.collation.type && (r3 = r3.toLowerCase(), n2 = n2.toLowerCase()), r3.startsWith(n2);
    });
  }
  queryEndsWith(t32, e42, r2) {
    return this.findItems(t32, r2, (t42) => {
      if (t42?.type !== v.String || e42.value?.type !== v.String) return false;
      let r3 = t42.value, n2 = e42.value.value;
      return 0 === this.collation.type && (r3 = r3.toLowerCase(), n2 = n2.toLowerCase()), r3.endsWith(n2);
    });
  }
  /**
  * Returns the index of the left most entry that is equal to the target.
  *
  * ```text
  *   Left most
  *       ↓
  * ┌───┬───┬───┬───┬───┬───┐
  * │ 1 │ 2 │ 2 │ 2 │ 2 │ 3 │
  * └───┴───┴───┴───┴───┴───┘
  * ```
  *
  * @param entries The entries array to search in.
  * @param position The position of the value in the entry.
  * @param target The target value to search for.
  * @returns The index of the left most entry that is equal to the target.
  */
  getLeftMost(e42, r2, n2) {
    let i22 = 0, s22 = e42.length;
    for (; i22 < s22; ) {
      let a22 = i22 + s22 >> 1, o22 = e42[a22], u22 = o22.values[r2];
      0 > t.compare(u22, n2, this.collation) ? i22 = a22 + 1 : s22 = a22;
    }
    return i22;
  }
  /**
  * Returns the index of the right most entry that is equal to the target.
  *
  * ```text
  *              Right most
  *                   ↓
  * ┌───┬───┬───┬───┬───┬───┐
  * │ 1 │ 2 │ 2 │ 2 │ 2 │ 3 │
  * └───┴───┴───┴───┴───┴───┘
  * ```
  *
  * @param entries The entries array to search in.
  * @param position The position of the value in the entry.
  * @param target The target value to search for.
  * @returns The index of the right most entry that is equal to the target.
  */
  getRightMost(e42, r2, n2) {
    let i22 = 0, s22 = e42.length;
    for (; i22 < s22; ) {
      let a22 = i22 + s22 >> 1, o22 = e42[a22], u22 = o22.values[r2];
      t.compare(u22, n2, this.collation) > 0 ? s22 = a22 : i22 = a22 + 1;
    }
    return s22 - 1;
  }
  /**
  * Finds all items that are matching the predicate and groups adjacent items together.
  *
  * @param entries The entries array to search in.
  * @param position The position of the value in the entry.
  * @param predicate The predicate to match the values against.
  * @returns An array of chunks that match the predicate.
  */
  findItems(t32, e42, r2) {
    let n2 = [], i22 = 0;
    for (let s22 = 0; s22 < t32.length; s22++) {
      let a22 = t32[s22], o22 = a22.values[e42], u22 = r2(o22);
      if (!u22) {
        if (i22 < s22) {
          let e52 = t32.slice(i22, s22);
          n2.push(e52);
        }
        i22 = s22 + 1;
      }
    }
    if (i22 < t32.length) {
      let e52 = t32.slice(i22);
      n2.push(e52);
    }
    return n2;
  }
  constructor(t32) {
    this.options = t32, c(this, "schema"), c(this, "fields"), c(this, "supportedLookupTypes", [
      "All",
      "Equals",
      "NotEquals",
      "LessThan",
      "GreaterThan",
      "Contains",
      "StartsWith",
      "EndsWith"
      /* EndsWith */
    ]), c(this, "modelPromise"), c(this, "model"), c(this, "collation");
    let e42 = {}, r2 = [];
    for (let t42 of this.options.fieldNames) {
      let n2 = this.options.collectionSchema[t42];
      I(n2, "Missing definition for field", t42), e42[t42] = n2, r2.push({ type: "Identifier", name: t42 });
    }
    this.schema = e42, this.fields = r2, this.collation = this.options.collation;
  }
};
var tT = class e3 {
  static read(r2) {
    let n2 = new e3(), i22 = r2.readUint16();
    for (let e42 = 0; e42 < i22; e42++) {
      let e52 = r2.readString(), i3 = t.read(r2);
      n2.setField(e52, i3);
    }
    return n2;
  }
  write(e42) {
    for (let [r2, n2] of (e42.writeUint16(this.fields.size), this.fields)) e42.writeString(r2), t.write(e42, n2);
  }
  getData() {
    let t32 = {};
    for (let [e42, r2] of this.fields) t32[e42] = r2;
    return t32;
  }
  setField(t32, e42) {
    this.fields.set(t32, e42);
  }
  getField(t32) {
    return this.fields.get(t32);
  }
  constructor() {
    c(this, "fields", /* @__PURE__ */ new Map());
  }
};
var tF = class {
  scanItems() {
    return this.itemsPromise ??= tU(this.url).then(async (t32) => {
      if (!t32.ok) throw Error(`Request failed: ${t32.status} ${t32.statusText}`);
      let e42 = await t32.arrayBuffer(), r2 = new Uint8Array(e42), n2 = new y(r2), i22 = [], s22 = n2.readUint32();
      for (let t42 = 0; t42 < s22; t42++) {
        let t5 = n2.getOffset(), e52 = tT.read(n2), r3 = n2.getOffset() - t5, s3 = new O(this.id, t5, r3), a22 = s3.toString(), o22 = { pointer: a22, data: e52.getData() };
        this.itemLoader.prime(a22, o22), i22.push(o22);
      }
      return i22;
    }), this.itemsPromise;
  }
  resolveItem(t32) {
    return this.itemLoader.load(t32);
  }
  constructor(t32, e42) {
    this.id = t32, this.url = e42, c(this, "itemsPromise"), c(this, "itemLoader", new g.default(async (t42) => {
      let e52 = t42.map((t5) => {
        let e6 = O.fromString(t5);
        return { from: e6.offset, to: e6.offset + e6.length };
      }), r2 = await tk(this.url, e52);
      return r2.map((e6, r3) => {
        let n2 = new y(e6), i22 = tT.read(n2), s22 = t42[r3];
        return I(s22, "Missing pointer"), { pointer: s22, data: i22.getData() };
      });
    }));
  }
};
var tN = class {
  async scanItems() {
    let t32 = await Promise.all(this.chunks.map(async (t42) => t42.scanItems()));
    return t32.flat();
  }
  async resolveItems(t32) {
    return Promise.all(t32.map((t42) => {
      let e42 = O.fromString(t42), r2 = this.chunks[e42.chunkId];
      return I(r2, "Missing chunk"), r2.resolveItem(t42);
    }));
  }
  compareItems(t32, e42) {
    let r2 = O.fromString(t32.pointer), n2 = O.fromString(e42.pointer);
    return r2.compare(n2);
  }
  compareValues(e42, r2, n2) {
    return t.compare(e42, r2, n2);
  }
  constructor(t32) {
    this.options = t32, c(this, "schema"), c(this, "indexes"), c(this, "resolveRichText"), c(this, "chunks"), this.chunks = this.options.chunks.map((t42, e42) => new tF(e42, t42)), this.schema = t32.schema, this.indexes = t32.indexes, this.resolveRichText = t32.resolveRichText;
  }
};

// /:https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9-1.js
var t3 = (t22, e22) => async () => {
  let i22 = await t22();
  return i22[e22];
};
var e4 = () => import("./E1DkniVB9-2-5XV2MCHA.js");
var i2 = [t3(e4, "richText"), t3(e4, "richText1"), t3(e4, "richText2")];
async function resolveRichText(t22) {
  let e22 = i2[t22];
  if (e22) return await e22();
}

// /:https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js
var o2 = { AJ3xXiH1b: { isNullable: true, type: l2.String }, b21LMmsDJ: { isNullable: true, type: l2.String }, D0Y4HLrdu: { isNullable: true, type: l2.ResponsiveImage }, DU7rnuqAg: { isNullable: true, type: l2.String }, eDFP2QOs4: { isNullable: true, type: l2.String }, ELEqS16GS: { isNullable: true, type: l2.ResponsiveImage }, fgkQqSsIy: { isNullable: true, type: l2.ResponsiveImage }, FRBb8XVWk: { isNullable: true, type: l2.String }, fVzoCYKVU: { isNullable: true, type: l2.RichText }, GCB18kgIp: { isNullable: true, type: l2.Date }, hB2ZwuD0I: { isNullable: true, type: l2.ResponsiveImage }, id: { isNullable: false, type: l2.String }, iQmqHH48a: { isNullable: true, type: l2.String }, LAH0D1AVx: { isNullable: true, type: l2.ResponsiveImage }, mElDA9Er9: { isNullable: true, type: l2.String }, nextItemId: { isNullable: true, type: l2.String }, o_nmt6jyp: { isNullable: true, type: l2.String }, previousItemId: { isNullable: true, type: l2.String }, te4Mr_yKe: { isNullable: true, type: l2.ResponsiveImage }, X8FHiV2Vb: { isNullable: true, type: l2.String }, Xdv6xUqrf: { isNullable: true, type: l2.String }, xW9906BlU: { isNullable: true, type: l2.ResponsiveImage }, Xy6Ignt2U: { definition: { isNullable: true, type: l2.String }, isNullable: true, type: l2.Array }, y1dnbpSu6: { isNullable: true, type: l2.RichText }, ydX4TPkpk: { isNullable: true, type: l2.String }, zJpZsUyr_: { isNullable: true, type: l2.String }, zvtaAcYEX: { isNullable: true, type: l2.Number } };
var m2 = ["id", "y1dnbpSu6", "fVzoCYKVU"];
var u2 = { type: 1 };
var c2 = ["previousItemId", "y1dnbpSu6", "fVzoCYKVU"];
var s2 = ["nextItemId", "y1dnbpSu6", "fVzoCYKVU"];
var f2 = ["id", "ydX4TPkpk"];
var d2 = ["ydX4TPkpk", "id"];
var p2 = ["FRBb8XVWk", "y1dnbpSu6", "fVzoCYKVU"];
var y2 = { type: 0 };
var V2 = ["ydX4TPkpk", "y1dnbpSu6", "fVzoCYKVU"];
var S2 = ["GCB18kgIp", "y1dnbpSu6", "fVzoCYKVU"];
var g2 = ["fgkQqSsIy", "y1dnbpSu6", "fVzoCYKVU"];
var U2 = ["Xy6Ignt2U", "y1dnbpSu6", "fVzoCYKVU"];
var b2 = ["AJ3xXiH1b", "y1dnbpSu6", "fVzoCYKVU"];
var h2 = ["X8FHiV2Vb", "y1dnbpSu6", "fVzoCYKVU"];
var w2 = ["zvtaAcYEX", "y1dnbpSu6", "fVzoCYKVU"];
var k2 = ["ELEqS16GS", "y1dnbpSu6", "fVzoCYKVU"];
var N2 = ["o_nmt6jyp", "y1dnbpSu6", "fVzoCYKVU"];
var D2 = ["xW9906BlU", "y1dnbpSu6", "fVzoCYKVU"];
var R2 = ["Xdv6xUqrf", "y1dnbpSu6", "fVzoCYKVU"];
var x2 = ["zJpZsUyr_", "y1dnbpSu6", "fVzoCYKVU"];
var I2 = ["mElDA9Er9", "y1dnbpSu6", "fVzoCYKVU"];
var B2 = ["eDFP2QOs4", "y1dnbpSu6", "fVzoCYKVU"];
var E2 = ["b21LMmsDJ", "y1dnbpSu6", "fVzoCYKVU"];
var L2 = ["D0Y4HLrdu", "y1dnbpSu6", "fVzoCYKVU"];
var C2 = ["iQmqHH48a", "y1dnbpSu6", "fVzoCYKVU"];
var z2 = ["y1dnbpSu6", "y1dnbpSu6", "fVzoCYKVU"];
var Y2 = ["te4Mr_yKe", "y1dnbpSu6", "fVzoCYKVU"];
var K2 = ["LAH0D1AVx", "y1dnbpSu6", "fVzoCYKVU"];
var v2 = ["hB2ZwuD0I", "y1dnbpSu6", "fVzoCYKVU"];
var X2 = ["DU7rnuqAg", "y1dnbpSu6", "fVzoCYKVU"];
var A2 = ["fVzoCYKVU", "y1dnbpSu6", "fVzoCYKVU"];
var H2 = new a2();
var T2 = new t4(H2);
var q2 = { collectionByLocaleId: { default: new tN({ chunks: [new URL("./E1DkniVB9-chunk-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/")], indexes: [new tM({ collation: u2, collectionSchema: o2, fieldNames: m2, range: { from: 0, to: 221 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: u2, collectionSchema: o2, fieldNames: c2, range: { from: 221, to: 441 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: u2, collectionSchema: o2, fieldNames: s2, range: { from: 441, to: 657 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: u2, collectionSchema: o2, fieldNames: f2, range: { from: 657, to: 894 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: u2, collectionSchema: o2, fieldNames: d2, range: { from: 894, to: 1131 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: p2, range: { from: 1131, to: 1375 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: V2, range: { from: 1375, to: 1612 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: S2, range: { from: 1612, to: 1815 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: g2, range: { from: 1815, to: 4011 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: U2, range: { from: 4011, to: 4254 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: b2, range: { from: 4254, to: 4519 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: h2, range: { from: 4519, to: 4726 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: w2, range: { from: 4726, to: 4929 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: k2, range: { from: 4929, to: 5674 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: N2, range: { from: 5674, to: 5913 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: D2, range: { from: 5913, to: 6832 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: R2, range: { from: 6832, to: 7086 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: x2, range: { from: 7086, to: 7321 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: I2, range: { from: 7321, to: 8044 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: B2, range: { from: 8044, to: 9522 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: E2, range: { from: 9522, to: 11150 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: L2, range: { from: 11150, to: 13244 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: C2, range: { from: 13244, to: 13477 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: z2, range: { from: 13477, to: 13660 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: Y2, range: { from: 13660, to: 15952 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: K2, range: { from: 15952, to: 18058 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: v2, range: { from: 18058, to: 20253 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: X2, range: { from: 20253, to: 20471 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") }), new tM({ collation: y2, collectionSchema: o2, fieldNames: A2, range: { from: 20471, to: 20654 }, url: new URL("./E1DkniVB9-indexes-default-0.framercms", "https://framerusercontent.com/modules/vB9O2HlhDIFBbk5zp6hm/RrTu7sjtfrgRO4LeKh2u/E1DkniVB9.js").href.replace("/modules/", "/cms/") })], resolveRichText, schema: o2 }) }, displayName: "Projects" };
var stdin_default = q2;
e5(q2, { FRBb8XVWk: { defaultValue: "", title: "Title", type: l2.String }, ydX4TPkpk: { title: "Slug", type: l2.String }, GCB18kgIp: { defaultValue: "", title: "Date", type: l2.Date }, fgkQqSsIy: { title: "Image", type: l2.ResponsiveImage }, Xy6Ignt2U: { dataIdentifier: "local-module:collection/gFwBjMfM0:default", defaultValue: [], title: "Categories", type: l2.MultiCollectionReference }, AJ3xXiH1b: { defaultValue: "", title: "Location", type: l2.String }, X8FHiV2Vb: { defaultValue: "", title: "Category", type: l2.String }, zvtaAcYEX: { defaultValue: 0, displayStepper: false, title: "Team", type: l2.Number }, ELEqS16GS: { title: "Client ava", type: l2.ResponsiveImage }, o_nmt6jyp: { defaultValue: "", title: "Client name", type: l2.String }, xW9906BlU: { title: "Team ava", type: l2.ResponsiveImage }, Xdv6xUqrf: { defaultValue: "", title: "Team name", type: l2.String }, zJpZsUyr_: { defaultValue: "", title: "Team occup", type: l2.String }, mElDA9Er9: { defaultValue: "", title: "Team quote", type: l2.String }, eDFP2QOs4: { defaultValue: "", title: "First top text", type: l2.String }, b21LMmsDJ: { defaultValue: "", title: "Second top text", type: l2.String }, D0Y4HLrdu: { title: "Image 2", type: l2.ResponsiveImage }, iQmqHH48a: { defaultValue: "", title: "Header 1", type: l2.String }, y1dnbpSu6: { defaultValue: "", title: "Content 1", type: l2.RichText }, te4Mr_yKe: { title: "Image 3", type: l2.ResponsiveImage }, LAH0D1AVx: { title: "Image 4", type: l2.ResponsiveImage }, hB2ZwuD0I: { title: "Image 5", type: l2.ResponsiveImage }, DU7rnuqAg: { defaultValue: "", title: "Header 2", type: l2.String }, fVzoCYKVU: { defaultValue: "", title: "Content 2", type: l2.RichText }, previousItemId: { dataIdentifier: "local-module:collection/E1DkniVB9:default", title: "Previous", type: l2.CollectionReference }, nextItemId: { dataIdentifier: "local-module:collection/E1DkniVB9:default", title: "Next", type: l2.CollectionReference } });

export {
  stdin_default
};
