// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 4b106605c55c3c39 "Housemood (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * emailText?: string // Email text
 * email?: string // Email
 * address?: string // Address
 * phonetext?: string // Phonetext
 * phone?: string // Phone
}} Props

 */
import {
	className as className2,
	css as css2,
	fonts as fonts2,
} from "./chunks/chunk-YEKYVP3A.js";
import { className, css, fonts } from "./chunks/chunk-FRA4GJSE.js";
import { routes } from "./chunks/chunk-6GHPDBWQ.js";

// virtual:contacts-for-terms-privacy
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/cMZs0UgDvXWDJygoDb3o/hp5opL2UuTU79o7SfRSW/GCRQqxwIE.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getFontsFromSharedStyle,
	Link,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var serializationHash = "framer-RY7ts";
var variantClassNames = {
	e5r0DF7Rk: "framer-v-1ee0sq6",
};
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var getProps = ({
	address,
	email,
	emailText,
	height,
	id,
	phone,
	phonetext,
	width,
	...props
}) => {
	return {
		...props,
		jnY5i7pX2: emailText ?? props.jnY5i7pX2 ?? "hi@youremail.com",
		kVIWqj_io: phonetext ?? props.kVIWqj_io ?? "(000) 000-00-00",
		rNKtwRVHL: phone ?? props.rNKtwRVHL,
		VoPVNWKXI:
			address ??
			props.VoPVNWKXI ??
			"Address Line One, Some additional Address, App 000",
		yI80MNT0v: email ?? props.yI80MNT0v,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className3,
		layoutId,
		variant,
		jnY5i7pX2,
		yI80MNT0v,
		VoPVNWKXI,
		kVIWqj_io,
		rNKtwRVHL,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		defaultVariant: "e5r0DF7Rk",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className, className2];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1ee0sq6",
							className3,
							classNames,
						)}
						data-framer-name={"Variant 1"}
						layoutDependency={layoutDependency}
						layoutId={"e5r0DF7Rk"}
						ref={refBinding}
						style={{
							...style,
						}}
					>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-w43i5p"}
							fonts={["Inter"]}
							layoutDependency={layoutDependency}
							layoutId={"yVXCbe3_q"}
							style={{
								"--extracted-r6o4lv":
									"var(--token-40b61429-162b-47b9-abcd-b05f9c77d6da, rgb(130, 132, 135))",
								"--framer-paragraph-spacing": "32px",
							}}
							text={jnY5i7pX2}
							verticalAlignment={"top"}
							withExternalLayout={true}
						>
							<React.Fragment>
								<motion.p
									className={"framer-styles-preset-5vtfax"}
									data-styles-preset={"xHNsUW18k"}
									style={{
										"--framer-text-color":
											"var(--extracted-r6o4lv, var(--token-40b61429-162b-47b9-abcd-b05f9c77d6da, rgb(130, 132, 135)))",
									}}
								>
									<Link
										href={yI80MNT0v}
										motionChild={true}
										nodeId={"yVXCbe3_q"}
										openInNewTab={false}
										scopeId={"GCRQqxwIE"}
										smoothScroll={false}
									>
										<motion.a
											className={"framer-styles-preset-1wcnze3"}
											data-styles-preset={"mbfCMHLDY"}
										>
											{"hi@youremail.com"}
										</motion.a>
									</Link>
								</motion.p>
							</React.Fragment>
						</RichText>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-ji29oo"}
							fonts={["Inter"]}
							layoutDependency={layoutDependency}
							layoutId={"kYelIUyi1"}
							style={{
								"--extracted-r6o4lv":
									"var(--token-b58ee0c0-736b-49de-961e-77f9e9613c8d, rgb(0, 0, 0))",
								"--framer-paragraph-spacing": "32px",
							}}
							text={VoPVNWKXI}
							verticalAlignment={"top"}
							withExternalLayout={true}
						>
							<React.Fragment>
								<motion.p
									className={"framer-styles-preset-5vtfax"}
									data-styles-preset={"xHNsUW18k"}
									style={{
										"--framer-text-color":
											"var(--extracted-r6o4lv, var(--token-b58ee0c0-736b-49de-961e-77f9e9613c8d, rgb(0, 0, 0)))",
									}}
								>
									{"Address Line One, Some additional Address, App 000"}
								</motion.p>
							</React.Fragment>
						</RichText>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-1us8g9"}
							fonts={["Inter"]}
							layoutDependency={layoutDependency}
							layoutId={"IogkEkBl1"}
							style={{
								"--extracted-r6o4lv":
									"var(--token-40b61429-162b-47b9-abcd-b05f9c77d6da, rgb(130, 132, 135))",
								"--framer-paragraph-spacing": "32px",
							}}
							text={kVIWqj_io}
							verticalAlignment={"top"}
							withExternalLayout={true}
						>
							<React.Fragment>
								<motion.p
									className={"framer-styles-preset-5vtfax"}
									data-styles-preset={"xHNsUW18k"}
									style={{
										"--framer-text-color":
											"var(--extracted-r6o4lv, var(--token-40b61429-162b-47b9-abcd-b05f9c77d6da, rgb(130, 132, 135)))",
									}}
								>
									<Link
										href={rNKtwRVHL}
										motionChild={true}
										nodeId={"IogkEkBl1"}
										openInNewTab={false}
										scopeId={"GCRQqxwIE"}
										smoothScroll={false}
									>
										<motion.a
											className={"framer-styles-preset-1wcnze3"}
											data-styles-preset={"mbfCMHLDY"}
										>
											{"(000) 000-00-00"}
										</motion.a>
									</Link>
								</motion.p>
							</React.Fragment>
						</RichText>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css3 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-RY7ts.framer-k883z8, .framer-RY7ts .framer-k883z8 { display: block; }",
	".framer-RY7ts.framer-1ee0sq6 { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 830px; }",
	".framer-RY7ts .framer-w43i5p, .framer-RY7ts .framer-ji29oo, .framer-RY7ts .framer-1us8g9 { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-RY7ts.framer-1ee0sq6 { gap: 0px; } .framer-RY7ts.framer-1ee0sq6 > * { margin: 0px; margin-bottom: calc(0px / 2); margin-top: calc(0px / 2); } .framer-RY7ts.framer-1ee0sq6 > :first-child { margin-top: 0px; } .framer-RY7ts.framer-1ee0sq6 > :last-child { margin-bottom: 0px; } }",
	...css,
	...css2,
];
var FramerGCRQqxwIE = withCSS(Component, css3, "framer-RY7ts");
var stdin_default = FramerGCRQqxwIE;
FramerGCRQqxwIE.displayName = "Contacts for Terms + Privacy";
FramerGCRQqxwIE.defaultProps = {
	height: 66,
	width: 829.5,
};
addPropertyControls(FramerGCRQqxwIE, {
	jnY5i7pX2: {
		defaultValue: "hi@youremail.com",
		displayTextArea: false,
		title: "Email text",
		type: ControlType.String,
	},
	yI80MNT0v: {
		title: "Email",
		type: ControlType.Link,
	},
	VoPVNWKXI: {
		defaultValue: "Address Line One, Some additional Address, App 000",
		displayTextArea: false,
		title: "Address",
		type: ControlType.String,
	},
	kVIWqj_io: {
		defaultValue: "(000) 000-00-00",
		displayTextArea: false,
		title: "Phonetext",
		type: ControlType.String,
	},
	rNKtwRVHL: {
		title: "Phone",
		type: ControlType.Link,
	},
});
addFonts(
	FramerGCRQqxwIE,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...getFontsFromSharedStyle(fonts),
		...getFontsFromSharedStyle(fonts2),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:contacts-for-terms-privacy
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ContactsForTermsPrivacyFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b106605c55c3c39deba2a5f4d00793f4f567db70b1a1c3162dfaba628c064cf"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var contacts_for_terms_privacy_default = ComponentWithRoot;
export { contacts_for_terms_privacy_default as default };
